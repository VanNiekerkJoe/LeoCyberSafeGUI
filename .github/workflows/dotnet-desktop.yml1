name: Leo CyberSafe CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'
  PROJECT_NAME: 'LeoCyberSafeGUI'

jobs:
  build:
    runs-on: windows-latest
    name: Build and Test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration Release --no-restore

    - name: Run tests
      run: dotnet test --configuration Release --no-build --verbosity normal

  package:
    runs-on: windows-latest
    needs: build
    name: Create Release Package

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Publish application
      run: |
        dotnet publish ${{ env.PROJECT_NAME }} \
          --configuration Release \
          --output ./publish \
          --runtime win-x64 \
          --self-contained true \
          -p:PublishSingleFile=true \
          -p:PublishTrimmed=true \
          -p:IncludeNativeLibrariesForSelfExtract=true

    - name: Create installer package
      run: |
        # Create a zip package for distribution
        7z a LeoCyberSafe-Release-${{ github.run_id }}.zip ./publish/*

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: LeoCyberSafe-Release
        path: LeoCyberSafe-Release-${{ github.run_id }}.zip

  release:
    runs-on: ubuntu-latest
    needs: [build, package]
    name: Create GitHub Release
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: LeoCyberSafe-Release

    - name: Create release
      uses: softprops/action-gh-release@v2
      with:
        files: LeoCyberSafe-Release-${{ github.run_id }}.zip
        tag_name: v${{ github.run_id }}
        name: Release ${{ github.run_id }}
        body: |
          ### Leo CyberSafe ${{ github.run_id }}
          Automated build of the cybersecurity awareness chatbot
          **Build Date**: ${{ github.event.head_commit.timestamp }}
          **Commit**: [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
        draft: false
        prerelease: false

  security-scan:
    runs-on: ubuntu-latest
    name: Security Scan
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        languages: 'csharp'
        queries: security-extended

    - name: Dependency Vulnerability Scan
      uses: actions/dependency-review-action@v4

  docs:
    runs-on: ubuntu-latest
    name: Update Documentation
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Update README
      run: |
        # Generate updated documentation
        echo "Updating documentation timestamp..."
        sed -i "s|Last Updated:.*|Last Updated: $(date -u '+%Y-%m-%d %H:%M:%S UTC')|" README.md
        
        # Commit changes
        git config user.name "github-actions"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add README.md
        git commit -m "Update documentation timestamp" || exit 0
        git push
